package cloudbalancing;

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

global HardSoftScoreHolder scoreHolder;

// Hard constraints

rule "requiredCpuPowerTotal"
  when
    $computer : Computer($cpuPower : cpuPower)
    accumulate(
      Process(
        computer == $computer,
        $requiredCpuPower : requiredCpuPower);
      $requiredCpuPowerTotal : sum($requiredCpuPower);
      $requiredCpuPowerTotal > $cpuPower
    )
  then
    scoreHolder.addHardConstraintMatch(kcontext, $cpuPower - $requiredCpuPowerTotal);
end

rule "requiredMemoryTotal"
  when
    $computer : Computer($memory : memory)
    accumulate(
      Process(
        computer == $computer,
        $requiredMemory : requiredMemory);
      $requiredMemoryTotal : sum($requiredMemory);
      $requiredMemoryTotal > $memory
    )
  then
    scoreHolder.addHardConstraintMatch(kcontext, $memory - $requiredMemoryTotal);
end

// Soft constraints

rule "computerCost"
  when
    $computer : Computer($cost : cost)
    exists Process(computer == $computer)
  then
    scoreHolder.addSoftConstraintMatch(kcontext, -$cost);
end
